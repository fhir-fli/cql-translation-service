<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.mitre.bonnie</groupId>
  <artifactId>cqlTranslationServer</artifactId>
  <packaging>jar</packaging>
  <version>2.3.0</version>
  <name>cqlTranslationServer</name>

  <repositories>
    <repository>
      <id>sonatype-public</id>
      <name>Sonatype Public</name>
      <url>https://oss.sonatype.org/content/groups/public/</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-http</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-moxy</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>2.4.0-b180830.0438</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>3.15.6.Final</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>cql</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>model</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>cql-to-elm</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>model-jaxb</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>elm-jaxb</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>quick</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>qdm</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>info.cqframework</groupId>
      <artifactId>cql-formatter</artifactId>
      <version>${cql.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.6.0</version>
    </dependency>
    <!--
      We now need to supply our own xpp3 implementation. Use the same one as is used here:
      https://github.com/cqframework/clinical_quality_language/blob/master/Src/java/buildSrc/src/main/groovy/cql.fhir-conventions.gradle
    -->
    <dependency>
      <groupId>org.ogce</groupId>
      <artifactId>xpp3</artifactId>
      <version>1.1.6</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>org.mitre.bonnie.cqlTranslationServer.Main</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputDirectory>${project.build.directory}/libs</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>libs/</classpathPrefix>
              <mainClass>org.mitre.bonnie.cqlTranslationServer.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <properties>
    <cql.version>3.3.2</cql.version>
    <jersey.version>2.41</jersey.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>
